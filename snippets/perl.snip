snippet     shebang
abbr        シェバンといつもの
	#!/usr/bin/perl
	use strict;
	use warnings;

snippet     dumper
abbr        変数dump
	use Data::Dumper;
	print Dumper [1, 2, 3]

snippet     Test::More
alias       test-template
abbr        perlテスト
	use Test::More;
	subtest '${1:hogesubtest}' => sub {
		plan "skip_all" => "reason";
		diag explain @one;
		is_deeply $one[0],[1,2];
		is &pattern_search(3)+0,120;
		ok(!defined $one[4]);
	};
	done_testing;

snippet     test-skip
abbr        perlテストSkip
	plan "skip_all" => "${1:reason}";

snippet     test-is
abbr        テストis一致
	is &pattern_search(3)+0,120;
	is min_cost(2),-1;

snippet     test-deeply
abbr        構造体比較
	is_deeply $one[0],[1,2];

snippet     test-like
abbr        正規表現で一致比較
	like $line[3],qr/Message-Id/;

snippet     url_encode
abbr        URLエンコード
	use URI::Escape;
	$unescaped = uri_unescape( $escaped ); #URLエンコード済み文字列のデコード
	$escaped = uri_escape( $unescaped ); #URLエンコード済み文字列へのエンコード

snippet     sort
abbr        ソート指定
	sort {$b->[2] <=> $a->[2]} @COMPANIES

snippet     open_write
abbr        ファイルOPEN書き込み
	open (WR,">${1:hoge.txt}") or die $!;

snippet     cgi_test
abbr        CGIのテスト
	#!/usr/bin/perl
	print "Content-type:text/plain\n\n";
	print "CGI Test";

snippet     chdir_script_bin
alias       find_bin
abbr        スクリプト実行ファイルにchdir
	use FindBin;
	chdir $FindBin::Bin;

snippet     copy
abbr        fileのコピー
	use File::Copy 'copy';
	copy $source, $destination or die $!;

snippet     pipe_open_write
abbr        パイプで渡して書き込み
	open (my $at,'|-',"at $+{hhmm} $+{month}/$+{day}/$+{year}") or die $!;
	print $at "touch /tmp/hoge";
	close $at;

snippet     use_encode
abbr        use Encode
	use Encode;
	use utf8;
	binmode STDOUT, ":utf8";
	open(my $fh, "<:encoding(Shift-JIS)","PRT-010-CSV-003-20150511.CSV") or die $!;
	while(<$fh>){
		#print encode("UTF-8",$_);
		if (/米ドル・日本円取引所為替証拠金取引/){
			print;
		}
	}
	close $fh;

snippet     use_feature_say
abbr        say使うとき
	use feature qw(say);

snippet     here_document
abbr        ヒアドキュメント
	my $hoge = <<"EOS";
	abcdefg
	hijklmno
	EOS

snippet     sendmail
abbr        sendmail使うとき
	open (my $sendmailfh, "|-:encoding(UTF-8)", "/usr/sbin/sendmail -f $to $to") or die $!;
	print $sendmailfh &mail_heder($to,"テスト");
	close $sendmailfh;

snippet     base64
abbr        base64
	use MIME::Base64;
	print encode_base64($source_data);

snippet     Time::Piece
	use Time::Piece;
	my $t = localtime;
	return $t->strftime("%Y%m%d");

snippet     File::Temp
	use File::Temp qw/ tempfile tempdir /;
	my $tempdir = tempdir(CLEANUP => 1);

snippet     pwd
	use Cwd;
	print getcwd();
