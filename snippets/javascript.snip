snippet     vuejs-template
abbr        Vue.jsのひな型
	var img = new Vue({
		el: '#picture-box',
		data: {
			boxes:  [{"name":"/hoge/huga","sorder":"2"},{"name":"/foo/bar","sorder":"1"}],
			showModal: false,
			ModalURL: ""
		},
		computed: {
			existImage: function(){
				if(this.boxes.length > 0){
					return true;
				}
				else {
					return false;
				}
			},
			sortBoxes: function () {
				return _.orderBy(this.boxes, 'sorder')
			}
		},
		methods: {
			OpenModal: function(url){
				this.ModalURL = url;
				this.showModal = true;
			}
		}
	});

snippet     json
abbr        jsonの変換
	JSON.parse('{"bar": 1234, "foo": undefined}');
	JSON.stringify({ x: 10, y: undefined, z: 20 });

snippet     strict
	'use strict';

snippet     argv
alias       hikisuu
abbr        コマンドライン引数
	// 0 が実行ファイル、1が実行スクリプト
	console.log(process.argv[2]);

snippet     promise
	exports.handler = async (event) => {
		const [s3_objects, instance_status]  = await Promise.all([count_s3_objects(), vm_status()]);
		if (s3_objects > 0 && instance_status === "TERMINATED"){
			console.log("start vm!")
			const result = await vm.start();
			console.log(result);
		}
		else {
			console.log("nop");
		}
	};
	async function count_s3_objects() {
		const AWS = require('aws-sdk');
		const s3 = new AWS.S3();
		const params = {
			Bucket: "batch-gcp",
			MaxKeys: 100,
			Prefix: "to-gcp/"
		};
		let result = await s3.listObjectsV2(params).promise();
		return result.Contents.length;
	}
	async function vm_status() {
		const instance = await vm.get();
		return instance[0].metadata.status;
	}
