snippet     shebang
abbr        最初の行
	#!/bin/bash
	set -eu

snippet     date
abbr        date +%Y%m%d_%H%M%S
options     word
	date +%Y%m%d_%H%M%S

snippet     old_file_delete
abbr        古いファイル削除
alias       find_old_file
options     head
	find ${1:#:DIR} -type f -mtime +60 -delete

snippet     read_stdin
abbr        標準入力から読み込み
alias       input
options     head
	read ${1:input_val}
	echo $$1

snippet     if-elif-else
abbr        if文
	if [ "$HOGE" -eq "1" ];then
		echo 1
	elif [ "$HOGE" -eq "2" ];then
		echo 2
	else
		echo err
	fi


snippet     sudo-u
abbr        sudoでユーザ実行
	sudo -Hu ${1:yamasita} bash -lc "${2:/path/to/script.sh}"

snippet     if_regrex
alias       regular-expression
abbr        正規表現if
	if [[ "$STRING" =~ ^ab[cd]$ ]]; then

snippet     function
alias       func
	function ${1:#:name} {
		${0:TARGET}
	}

snippet     hear_document_cat
abbr        ヒアドキュメントでファイル書く
	cat <<EOF > exc.txt
	- /sys/*
	- /proc/*
	- /mnt/*
	- /dev/*
	- /tmp/*
	EOF


snippet     hear_document_to_variable
abbr        ヒアドキュメントで変数にいれる
	val=\`cat <<EOF
	hoge
	huga
	hoge
	EOF
	\`
	echo "$val"

snippet     rsync_copy_only
abbr       rsyncでとりあえずコピーできればいい
	rsync -azv --no-perms --no-owner --no-group --no-times --size-only --delete --exclude-from=/jitaku/exc.txt ore_jitaku:/raid/samba/ /jitaku/samba/

snippet     rsync_copy-all
abbr        rsyncでバックアップ(全体)
	#!/bin/bash
	set -e
	cat <<EOF > exc.txt
	- /dev/*
	- /mnt/*
	- /proc/*
	- /raid/*
	- /run/systemd/*
	- /run/udev/*
	- /run/user/*
	- /sys/*
	- /tmp/*
	- /var/lib/docker/*
	- /var/lib/libvirt/images/*
	- /var/lib/machines/*
	- /var/log/journal/*
	- /var/tmp/*
	EOF
	rsync -av -P --numeric-ids --delete-excluded --exclude-from=exc.txt root@hoge-server:/ ./root/

snippet     rsync_copy-part
abbr        rsyncでバックアップ(部分)
	# 部分バックアップ
	cat <<EOF > exc.txt
	+ /var/
	+ /var/www/
	+ /var/www/cal/
	+ /var/www/cal/**
	+ /work/
	+ /work/**
	- *
	
	EOF
	rsync -av -P --numeric-ids --delete-excluded --exclude-from=exc.txt root@hoge-server:/ ./root/

snippet     getopts
abbr        引数解析
	local OPT
	OPTIND=1
	while getopts "hs:c:" OPT
	do
		case $OPT in
		"h" ) 
			echo $usage
			return
			;;
		"s" )
			echo "servername -> $OPTARG"
			local SNI="-servername $OPTARG"
			;;
		"c" )
			local SSL_HOST="$OPTARG"
			echo "connect -> $SSL_HOST"
			;;
		esac
	done

snippet     tempdir
alias       tmpdir
	TEMPDIR=$(mktemp -d)
	rm -rf $TEMPDIR

snippet     readline
abbr        ファイルから一行ずつ読む
	cnt=0
	while read line
	do
		cnt=\`expr $cnt + 1\`
		echo "LINE $cnt : $line"
	done < /tmp/test.txt

snippet     normal_if
abbr        普通のIF分
	if [ $size -eq 0 ]; then
	  rm /tmp/hoge.txt
	elif [ $size -eq 100 ]; then
	  :
	else
	  echo 'Invalid file!' 1>&2
	  exit 1
	fi

snippet     exception
alias       trap, reigai
abbr        例外処理
	#!/bin/bash
	set -eu
	
	finalize(){
	  echo "エラー発生"
	  exit 1
	}
	trap "finalize" ERR 2

snippet     cd_script_directory
	cd \`dirname \$0\`

snippet     trim_ext
abbr        拡張子取り除く
	original="test.txt"
	filename="${original%.*}"

snippet     convmp3_ffmpeg
abbr        mp3変換
	function convmp3 {
		local src=$1
		local fname="${src%.*}"
		ffmpeg -i $src $fname.mp3
		mv $src /tmp/
	}
