snippet     ansible_templete
abbr        templete
	template: src=${1:hoge.j2} dest=${2:/etc/network/interfaces} owner=${3:root} group=${4:root} mode=${5:0644}

snippet     ansible_shell
abbr        シェル実行
	shell: ${1:apt-get source dwm} creates=${2:/tmp/dwm-6.0} chdir=${3:/tmp}

snippet     ansible_apt_with_items
abbr        aptでインストール
	apt: pkg={{ item }} state=installed
	with_items:
	 - apt-file
	 - tmux
	 - postfix

snippet   ansible_directory
abbr      ディレクトリ作成
	file: path=/home/yamasita/.ssh owner=yamasita group=yamasita mode=0700 state=directory recurse=yes

snippet   ansible_copy
abbr      ファイルコピー
	copy: src={{ item }}.key dest=/home/{{ item }}/.ssh/authorized_keys owner={{ item }} group={{ item }} mode=0644 force=no

snippet   ansible_symlink
abbr      シンボリックリンク
	file: src=/file/to/link/to dest=/path/to/symlink owner=foo group=foo state=link

snippet    ansible_notify
abbr   リスタート例
	notify: restart postfix

snippet      ansible_handler
abbr     ハンドラ例
	- name: restart nginx
	  service: name=nginx state=restarted

snippet      ansible_user
abbr     ユーザ作成
	user: name={{ item }} shell=/bin/bash groups=sudo,adm password={{ bps_password }} append=yes update_password=on_create
	with_items:
	  - yamasita
	  - baba
	  - morimori

snippet  ansible_hostname
abbr     ホスト名の設定
	hostname: name={{server_host_name}}

snippet  ansible_include
abbr     include
	- include: rbenv-setup.yml
	  sudo: yes
	  sudo_user: "{{ ruby_deploy_user }}"

snippet ansible_register
alias       when
abbr    実行結果判定
	- name: rbenvにインストールされてるバージョンチェック
	  shell: cd; bash -lc "rbenv versions | grep -q {{ install_ruby_version }}"
	  register: result
	  failed_when: result.rc not in [0, 1]

	- name: Installs ruby
	  shell: cd; bash -lc "CONFIGURE_OPTS=--disable-install-rdoc rbenv install {{ install_ruby_version }}"
	  when: result.rc != 0

snippet  ansible_ignore_errors
abbr エラー無視
	ignore_errors: True

snippet ansible_varfile
abbr var/main.ymlファイル例
	appuser: sharemap
	rails_dir: prod
	unicorn_port: 8091
	unicorn_worker: 3
	unicorn_timeout: 30
	db_adapter: postgresql
	database: sharemap
	db_user: sharemap
	db_password: sharemap

snippet ansible_git
abbr git
	git: repo=${1:ssh://git@github.com/mylogin/hello.git} dest=${2:/home/mylogin/hello} accept_hostkey=${3:yes} key_file=${4:/path/to/.ssh/private}

snippet ansible_name
abbr 処理名
	- name: ${1:systemユーザ作成}

snippet ansible_tags
abbr 処理名
	tags:
	  - ${1:test}

snippet     with_items_multi_key
abbr        with_items複数
	- name: ifcfg-eth0設定
	  template: src=ifcfg-eth0.j2 dest=/etc/sysconfig/network-scripts/ifcfg-{{ item.name }} owner=root group=root mode=0644
	  with_items:
	   - { name: 'eth0:1',  ip: '{{ apache_a }}' }
	   - { name: 'eth0:2',  ip: '{{ apache_b }}' }
	   - { name: 'eth0:3',  ip: '{{ apache_c }}' }
	   - { name: 'eth0:4',  ip: '{{ apache_d }}' }

snippet     wait_for_port
alias       sleep_port
abbr        portが開くまで待つ
	- wait_for: port=8000 delay=10

snippet     ansible_bash
abbr        bashの実行例
	shell: cd; bash -lc "rbenv global {{ ruby_default_version }}"

snippet     ansible_mysql_create_db
abbr        mysqlでDB作成
	- name: DB作成
	  mysql_db: name={{dbname}} state=present encoding=utf8

snippet     ansible_mysql_create_user
abbr        mysqlでuser作成
	- name: ユーザー作成
	  mysql_user: name={{dbuser}} password={{dbpass}} priv={{dbname}}.*:ALL

snippet     ansible_task_templete
alias       hinagata
abbr        タスク雛形
	---
	
	- name: mysql関連必要パッケージ
	  action: apt name={{item}}
	  with_items:
		- mysql-server
		- python-mysqldb
		- libmysqld-dev
		- postfix
		- postfix-mysql
		- postfixadmin

snippet     ansible_add_lineinfile
abbr        一行追加
	lineinfile: dest=/etc/apache2/apache2.conf line="ServerName mailserver"

snippet     ansible_change_lineinfile
abbr        一行変更
	lineinfile: dest=/etc/apache2/conf-enabled/security.conf regexp="^ServerTokens" line="ServerTokens Prod"

snippet     ansible_debfile_install
abbr        debファイルからインストール
	apt: deb=${1:/tmp/mypackage.deb}

snippet     ansible_debug
abbr        デバッグメッセージ
	debug: msg="System {{ inventory_hostname }} has uuid {{ ansible_distribution }}"

snippet     ansible_gather_facts
abbr        情報収集をやめる
	gather_facts: no

snippet     ansible_command
abbr        コマンド実行
	command: /sbin/shutdown -t now

snippet     ansible_changed_when
abbr        変更判定
	changed_when: result.rc == 0

snippet     ansible_when_distribution
abbr        ディストリ判定
	when: ansible_distribution == "Ubuntu"

snippet     ansible_failed_when
abbr        失敗とみなす条件
	failed_when: result.rc not in [0, 1]

snippet     ansible_local_action
abbr        ローカル実行
	- name: make実行
	  local_action: shell cd roles/ore_cron/files/ && make

snippet     ansible_service_yum_enable
abbr        サービスの有効化
	- name: ntpdの有効化
	  service: name=nginx16-nginx enabled=yes state=started

snippet     ansible_yum_install
abbr        yumでインストール
	- name: 必要パッケージインストール
	  yum: name={{ item }}
	  with_items:
		- mysql

snippet     ansible_absent
alias       ansible_file_delete
abbr        ファイルの削除
	- name: nginx.default削除
	  file: path=/etc/nginx/conf.d/default.conf state=absent
	  notify: restart nginx

snippet  ansible_sudo
abbr     sudo
	- include: rbenv-setup.yml
	  sudo: yes
	  sudo_user: hogeuser

snippet  ansible_authorized_keys
abbr     鍵設定
	- name: 
	  authorized_key: user={{ item }} key="{{ lookup('file','note/' + item + '.pub') }}"
	  with_items:
		- hogeuser
		- hugauser
